# I added this file using explorer and named it docker-compose.yaml
# *.yaml extension does not seem to be supported by rider or vs. So i changed extension to *.yml .  
# Then i opened vs and added "container orchestration support" and it used this file automatically.
# If you encounter issues such as "service does not have an image or context" that means that you need to 
# delete .vs, obj and bin folders. Also i deleted .idea folder to make sure that everything works. 
# Rider 2023.1 Visual Studio 2022. (02.01.2024)

version: "3.8"

services:
  auction_svc:
    container_name: auction_svc_name
    build:
      dockerfile: AuctionService/Dockerfile
      context: .
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_URLS=http://+:7777
      - RabbitMQ__Host=rabbitmq_name
      - RabbitMQ__Username=guest
      - RabbitMQ__Password=guest
      - IdentityServiceUrl=http://identity_svc_name
      - ConnectionStrings__DefaultConnection=Server=auction_db_name:5432; User Id=postgres;Password=postgrespw;Database=auctions
      - Kestrel__Endpoints__Grpc__Protocols=Http2
      - Kestrel__Endpoints__Grpc__Url=Http://+:7777
      - Kestrel__Endpoints__WebApi__Protocols=Http1
      - Kestrel__Endpoints__WebApi__Url=Http://+:80
    depends_on: 
      - auction_db
      - rabbitmq
    ports:
      - 7001:80
      - 7777:7777
    
  bid_svc: 
    container_name: bid_svc_name
    build:
      dockerfile: BiddingService/Dockerfile
      context: .
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_URLS=http://+:7003
      - RabbitMQ__Host=rabbitmq_name
      - RabbitMQ__Username=guest
      - RabbitMQ__Password=guest
      - IdentityServiceUrl=http://identity_svc_name
      - ConnectionStrings__BidDbConnection=mongodb://root:mongopw@search_db_name
      - GrpcAuction=http://auction_svc:7777
    depends_on: 
      - auction_svc
      - search_db
    ports:
      - 7003:7003
  
  search_svc:
    container_name: search_svc_name
    build:
      dockerfile: SearchService/Dockerfile
      context: .
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMQ__Host=rabbitmq_name
      - RabbitMQ__Username=guest
      - RabbitMQ__Password=guest
      - ConnectionStrings__MongoDbConnection=mongodb://root:mongopw@search_db_name
      - AuctionServiceUrl=http://auction_svc_name
    depends_on:
      - search_db
      - rabbitmq
    ports:
      - 7002:80
  
  identity_svc:
    container_name: identity_svc_name
    build:
      dockerfile: IdentityService/Dockerfile
      context: .
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMQ__Host=rabbitmq_name
      - RabbitMQ__Username=guest
      - RabbitMQ__Host=guest
      - IdentityServiceUrl=http://identity_svc_name
      - ConnectionStrings__DefaultConnection=Server=auction_db_name:5432; User Id=postgres;Password=postgrespw;Database=Identity
      - IssuerUri=http://identity_svc_name
    ports:
      - 5000:80
        
  gateway_svc:
    container_name: gateway_svc_name
    build:
      dockerfile: GatewayService/Dockerfile
      context: .
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLS=http://+:80
    ports:
      - 6001:80
  
  auction_db:
    container_name: auction_db_name
    image: postgres
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=postgrespw
    volumes:
      - auction_db:/var/lib/postgresql/data

  search_db:
    container_name: search_db_name
    image: mongo
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=mongopw
    volumes:
      - search_db:/var/lib/mongodb/data
  
  rabbitmq:
    container_name: rabbitmq_name
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672
      - 15672:15672

volumes:
  auction_db:
  search_db:
  